package coupon.sys.core.beans;

import java.io.Serializable;
import java.util.Collection;

import coupon.sys.core.exceptions.CryptoHashException;
import coupon.sys.core.utils.CryptoHashAlgorithms;

// TODO: Auto-generated Javadoc
/**
 * This class is for creating the company object to use with the different
 * company related methods.
 * 
 * @author Julio Hernan Trajtemberg
 * @version 1.0 September 18, 2018.
 */
public class Company implements Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;
	
	/** The id. */
	private long id;
	
	/** The name. */
	private String name;
	
	/** The password. */
	private String password;
	
	/** The email. */
	private String email;
	
	/** The coupons. */
	private Collection<Coupon> coupons;

	/**
	 * Simple C'tor when no object needed.
	 */
	public Company() {
	}

	/**
	 * Company C'tor.
	 *
	 * @param id            Company ID - Auto-generated by DB
	 * @param name            Company name
	 * @param password            Company password - Converted to hash by
	 *            {@code CryptoHashAlgorithms}
	 * @param email            Company email
	 */
	public Company(long id, String name, String password, String email) {
		this.id = id;
		this.name = name;
		this.password = password;
		this.email = email;
	}

	/**
	 * Gets the id.
	 *
	 * @return id - Returns Company ID
	 */
	public long getId() {

		return id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id            - Set Company ID
	 */
	public void setId(long id) {

		this.id = id;
	}

	/**
	 * Gets the name.
	 *
	 * @return name - returns Company name
	 */
	public String getName() {

		return name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name            - Company name received by user
	 */
	public void setName(String name) {

		this.name = name;
	}

	/**
	 * Gets the password.
	 *
	 * @return password - returns Company password
	 */
	public String getPassword() {

		return password;
	}

	/**
	 * Takes the received password and hash it.
	 *
	 * @param password            Company password - Set password received by user
	 * @throws CryptoHashException             If hash couldn't be hashed throws exception
	 */
	public void setPassword(String password) throws CryptoHashException {

		CryptoHashAlgorithms CHA = new CryptoHashAlgorithms();
		try {
			password = CHA.hashPassword(password.getBytes(), "SHA-256");
		} catch (CryptoHashException e) {
			throw new CryptoHashException("Failed to hash the password");
		}
		this.password = password;
	}

	/**
	 * Gets the email.
	 *
	 * @return email - returns Company email
	 */
	public String getEmail() {

		return email;
	}

	/**
	 * Sets the email.
	 *
	 * @param email            - email received by Company
	 */
	public void setEmail(String email) {

		this.email = email;
	}

	/**
	 * Gets the coupons.
	 *
	 * @return coupons - returns Company coupons
	 */
	public Collection<Coupon> getCoupons() {

		return coupons;
	}

	/**
	 * Sets the coupons.
	 *
	 * @param coupons            - coupons received by Company
	 */
	public void setCoupons(Collection<Coupon> coupons) {

		this.coupons = coupons;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {

		return "Company [id=" + id + ", name=" + name + ", password=" + password + ", email=" + email + ", coupons="
				+ coupons + "]";
	}

}
